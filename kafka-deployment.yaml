apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.25.0 (a70f80cc)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.25.0 (a70f80cc)
      creationTimestamp: null
      labels:
        io.kompose.network/backend: "true"
        io.kompose.service: kafka
    spec:
      containers:
        - env:
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: kafka
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_CREATE_TOPICS
              value: registration:1:1
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
          image: wurstmeister/kafka
          name: kafka
          ports:
            - containerPort: 9092
          resources: {}
          volumeMounts:
            - mountPath: /logs
              name: kafka-claim0
            - mountPath: /data
              name: kafka-claim1
      restartPolicy: Always
      volumes:
        - name: kafka-claim0
          persistentVolumeClaim:
            claimName: kafka-claim0
        - name: kafka-claim1
          persistentVolumeClaim:
            claimName: kafka-claim1
status: {}
